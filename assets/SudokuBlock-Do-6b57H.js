import{d as w,u as y,s as x,a,o as u,c as n,F as l,r as d,i as c,n as h,e as V,m as B,_ as C}from"./index-D3rMyTRy.js";const S={key:0,class:"flex flex-col border-2 border-black h-[440px] w-[440px] mob:w-full"},I=["disabled","value","onInput"],N=w({__name:"SudokuBlock",setup(D){const r=y(),{sudokuBlock:f,isStarted:p,isCompleted:b,isPaused:k}=x(r),m=(s,i)=>{const t=i.target;let o=t.value.replace(/[^1-9]/g,"");o.length>1&&(o=o.slice(0,1),t.value=o);const e=parseFloat(o);if(s.guess!==e){if(Number.isNaN(e)){t.value="";return}r.recordMove(s,e),B(s,e),s.isError?r.scorePenalty():(r.scoreSuccess(),b.value&&r.finishGame())}},_=s=>{(s.key==="ArrowUp"||s.key==="ArrowDown")&&s.preventDefault()};return(s,i)=>a(p)?(u(),n("div",S,[(u(!0),n(l,null,d(a(f),(t,o)=>(u(),n("div",{key:o,class:"flex w-full h-full sudoku-row"},[(u(!0),n(l,null,d(t,(e,g)=>(u(),n("input",{key:g,type:"number",disabled:e.isVisible||a(c)(e)||a(k),value:e.isVisible&&e.value||!e.isVisible&&e.guess,class:h(["sudoku-cell text-center text-lg font-bold border border-gray-300 outline-none disabled:cursor-not-allowed w-full h-full",e.isVisible?"bg-gray-200":"",e.isError?"bg-red-200":"",e.isHint?"bg-blue-400":"",a(c)(e)?"bg-green-400":""]),onInput:v=>m(e,v),onKeydown:_},null,42,I))),128))]))),128))])):V("",!0)}}),F=C(N,[["__scopeId","data-v-ad295336"]]);export{F as default};
